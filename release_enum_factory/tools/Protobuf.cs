// Generated by the protocol buffer compiler.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace org.jiira.protobuf {
  
  public static partial class Protobuf {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_CLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CLogin, global::org.jiira.protobuf.CLogin.Builder> internal__static_org_jiira_protobuf_CLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_SUserData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SUserData, global::org.jiira.protobuf.SUserData.Builder> internal__static_org_jiira_protobuf_SUserData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_SError__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SError, global::org.jiira.protobuf.SError.Builder> internal__static_org_jiira_protobuf_SError__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_SSingleUpdate__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SSingleUpdate, global::org.jiira.protobuf.SSingleUpdate.Builder> internal__static_org_jiira_protobuf_SSingleUpdate__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_CTest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CTest, global::org.jiira.protobuf.CTest.Builder> internal__static_org_jiira_protobuf_CTest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_STest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.STest, global::org.jiira.protobuf.STest.Builder> internal__static_org_jiira_protobuf_STest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_org_jiira_protobuf_CHeart__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CHeart, global::org.jiira.protobuf.CHeart.Builder> internal__static_org_jiira_protobuf_CHeart__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Protobuf() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5wcm90b2J1Zi5wcm90bxISb3JnLmppaXJhLnByb3RvYnVmIiwKBkNMb2dp" + 
          "bhIQCgh1c2VyTmFtZRgBIAIoCRIQCghwYXNzV29yZBgCIAIoCSIZCglTVXNl" + 
          "ckRhdGESDAoEY29kZRgBIAIoBSIWCgZTRXJyb3ISDAoEY29kZRgBIAIoBSJK" + 
          "Cg1TU2luZ2xlVXBkYXRlEg4KBnVzZXJJRBgBIAIoBRIMCgRrZXlzGAIgAygF" + 
          "EgsKA0lEcxgDIAMoBRIOCgZjb3VudHMYBCADKAUiIAoFQ1Rlc3QSCgoCaWQY" + 
          "ASACKAUSCwoDbXNnGAIgAigJIiAKBVNUZXN0EgoKAmlkGAEgAigFEgsKA21z" + 
          "ZxgCIAIoCSIWCgZDSGVhcnQSDAoEdGltZRgBIAIoA0IOQgxQcm90b2J1ZlR5" + 
          "cGU=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_org_jiira_protobuf_CLogin__Descriptor = Descriptor.MessageTypes[0];
        internal__static_org_jiira_protobuf_CLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CLogin, global::org.jiira.protobuf.CLogin.Builder>(internal__static_org_jiira_protobuf_CLogin__Descriptor,
                new string[] { "UserName", "PassWord", });
        internal__static_org_jiira_protobuf_SUserData__Descriptor = Descriptor.MessageTypes[1];
        internal__static_org_jiira_protobuf_SUserData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SUserData, global::org.jiira.protobuf.SUserData.Builder>(internal__static_org_jiira_protobuf_SUserData__Descriptor,
                new string[] { "Code", });
        internal__static_org_jiira_protobuf_SError__Descriptor = Descriptor.MessageTypes[2];
        internal__static_org_jiira_protobuf_SError__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SError, global::org.jiira.protobuf.SError.Builder>(internal__static_org_jiira_protobuf_SError__Descriptor,
                new string[] { "Code", });
        internal__static_org_jiira_protobuf_SSingleUpdate__Descriptor = Descriptor.MessageTypes[3];
        internal__static_org_jiira_protobuf_SSingleUpdate__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.SSingleUpdate, global::org.jiira.protobuf.SSingleUpdate.Builder>(internal__static_org_jiira_protobuf_SSingleUpdate__Descriptor,
                new string[] { "UserID", "Keys", "IDs", "Counts", });
        internal__static_org_jiira_protobuf_CTest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_org_jiira_protobuf_CTest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CTest, global::org.jiira.protobuf.CTest.Builder>(internal__static_org_jiira_protobuf_CTest__Descriptor,
                new string[] { "Id", "Msg", });
        internal__static_org_jiira_protobuf_STest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_org_jiira_protobuf_STest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.STest, global::org.jiira.protobuf.STest.Builder>(internal__static_org_jiira_protobuf_STest__Descriptor,
                new string[] { "Id", "Msg", });
        internal__static_org_jiira_protobuf_CHeart__Descriptor = Descriptor.MessageTypes[6];
        internal__static_org_jiira_protobuf_CHeart__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::org.jiira.protobuf.CHeart, global::org.jiira.protobuf.CHeart.Builder>(internal__static_org_jiira_protobuf_CHeart__Descriptor,
                new string[] { "Time", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class CLogin : pb::GeneratedMessage<CLogin, CLogin.Builder> {
    private static readonly CLogin defaultInstance = new Builder().BuildPartial();
    public static CLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CLogin DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CLogin, CLogin.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CLogin__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PassWordFieldNumber = 2;
    private bool hasPassWord;
    private string passWord_ = "";
    public bool HasPassWord {
      get { return hasPassWord; }
    }
    public string PassWord {
      get { return passWord_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        if (!hasPassWord) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasUserName) {
        output.WriteString(1, UserName);
      }
      if (HasPassWord) {
        output.WriteString(2, PassWord);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
        }
        if (HasPassWord) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PassWord);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CLogin ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CLogin ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CLogin prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CLogin result = new CLogin();
      
      protected override CLogin MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CLogin();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.CLogin.Descriptor; }
      }
      
      public override CLogin DefaultInstanceForType {
        get { return global::org.jiira.protobuf.CLogin.DefaultInstance; }
      }
      
      public override CLogin BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CLogin returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CLogin) {
          return MergeFrom((CLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CLogin other) {
        if (other == global::org.jiira.protobuf.CLogin.DefaultInstance) return this;
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassWord) {
          PassWord = other.PassWord;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              UserName = input.ReadString();
              break;
            }
            case 18: {
              PassWord = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasUserName {
        get { return result.HasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassWord {
        get { return result.HasPassWord; }
      }
      public string PassWord {
        get { return result.PassWord; }
        set { SetPassWord(value); }
      }
      public Builder SetPassWord(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPassWord = true;
        result.passWord_ = value;
        return this;
      }
      public Builder ClearPassWord() {
        result.hasPassWord = false;
        result.passWord_ = "";
        return this;
      }
    }
    static CLogin() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class SUserData : pb::GeneratedMessage<SUserData, SUserData.Builder> {
    private static readonly SUserData defaultInstance = new Builder().BuildPartial();
    public static SUserData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SUserData DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SUserData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SUserData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SUserData, SUserData.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SUserData__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private int code_ = 0;
    public bool HasCode {
      get { return hasCode; }
    }
    public int Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCode) {
        output.WriteInt32(1, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Code);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SUserData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SUserData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SUserData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SUserData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SUserData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SUserData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SUserData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SUserData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SUserData ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SUserData ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SUserData prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SUserData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SUserData result = new SUserData();
      
      protected override SUserData MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SUserData();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.SUserData.Descriptor; }
      }
      
      public override SUserData DefaultInstanceForType {
        get { return global::org.jiira.protobuf.SUserData.DefaultInstance; }
      }
      
      public override SUserData BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SUserData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SUserData) {
          return MergeFrom((SUserData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SUserData other) {
        if (other == global::org.jiira.protobuf.SUserData.DefaultInstance) return this;
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Code = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasCode {
        get { return result.HasCode; }
      }
      public int Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(int value) {
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static SUserData() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class SError : pb::GeneratedMessage<SError, SError.Builder> {
    private static readonly SError defaultInstance = new Builder().BuildPartial();
    public static SError DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SError DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SError ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SError__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SError, SError.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SError__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private int code_ = 0;
    public bool HasCode {
      get { return hasCode; }
    }
    public int Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCode) {
        output.WriteInt32(1, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Code);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SError ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SError ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SError ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SError ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SError ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SError ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SError ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SError ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SError ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SError ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SError prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SError, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SError result = new SError();
      
      protected override SError MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SError();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.SError.Descriptor; }
      }
      
      public override SError DefaultInstanceForType {
        get { return global::org.jiira.protobuf.SError.DefaultInstance; }
      }
      
      public override SError BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SError returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SError) {
          return MergeFrom((SError) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SError other) {
        if (other == global::org.jiira.protobuf.SError.DefaultInstance) return this;
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Code = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasCode {
        get { return result.HasCode; }
      }
      public int Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(int value) {
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static SError() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class SSingleUpdate : pb::GeneratedMessage<SSingleUpdate, SSingleUpdate.Builder> {
    private static readonly SSingleUpdate defaultInstance = new Builder().BuildPartial();
    public static SSingleUpdate DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SSingleUpdate DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SSingleUpdate ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SSingleUpdate__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SSingleUpdate, SSingleUpdate.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_SSingleUpdate__FieldAccessorTable; }
    }
    
    public const int UserIDFieldNumber = 1;
    private bool hasUserID;
    private int userID_ = 0;
    public bool HasUserID {
      get { return hasUserID; }
    }
    public int UserID {
      get { return userID_; }
    }
    
    public const int KeysFieldNumber = 2;
    private pbc::PopsicleList<int> keys_ = new pbc::PopsicleList<int>();
    public scg::IList<int> KeysList {
      get { return pbc::Lists.AsReadOnly(keys_); }
    }
    public int KeysCount {
      get { return keys_.Count; }
    }
    public int GetKeys(int index) {
      return keys_[index];
    }
    
    public const int IDsFieldNumber = 3;
    private pbc::PopsicleList<int> iDs_ = new pbc::PopsicleList<int>();
    public scg::IList<int> IDsList {
      get { return pbc::Lists.AsReadOnly(iDs_); }
    }
    public int IDsCount {
      get { return iDs_.Count; }
    }
    public int GetIDs(int index) {
      return iDs_[index];
    }
    
    public const int CountsFieldNumber = 4;
    private pbc::PopsicleList<int> counts_ = new pbc::PopsicleList<int>();
    public scg::IList<int> CountsList {
      get { return pbc::Lists.AsReadOnly(counts_); }
    }
    public int CountsCount {
      get { return counts_.Count; }
    }
    public int GetCounts(int index) {
      return counts_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserID) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasUserID) {
        output.WriteInt32(1, UserID);
      }
      if (keys_.Count > 0) {
        foreach (int element in keys_) {
          output.WriteInt32(2, element);
        }
      }
      if (iDs_.Count > 0) {
        foreach (int element in iDs_) {
          output.WriteInt32(3, element);
        }
      }
      if (counts_.Count > 0) {
        foreach (int element in counts_) {
          output.WriteInt32(4, element);
        }
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasUserID) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserID);
        }
        {
          int dataSize = 0;
          foreach (int element in KeysList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * keys_.Count;
        }
        {
          int dataSize = 0;
          foreach (int element in IDsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * iDs_.Count;
        }
        {
          int dataSize = 0;
          foreach (int element in CountsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * counts_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SSingleUpdate ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SSingleUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SSingleUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SSingleUpdate ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SSingleUpdate prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SSingleUpdate, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SSingleUpdate result = new SSingleUpdate();
      
      protected override SSingleUpdate MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SSingleUpdate();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.SSingleUpdate.Descriptor; }
      }
      
      public override SSingleUpdate DefaultInstanceForType {
        get { return global::org.jiira.protobuf.SSingleUpdate.DefaultInstance; }
      }
      
      public override SSingleUpdate BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.keys_.MakeReadOnly();
        result.iDs_.MakeReadOnly();
        result.counts_.MakeReadOnly();
        SSingleUpdate returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SSingleUpdate) {
          return MergeFrom((SSingleUpdate) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SSingleUpdate other) {
        if (other == global::org.jiira.protobuf.SSingleUpdate.DefaultInstance) return this;
        if (other.HasUserID) {
          UserID = other.UserID;
        }
        if (other.keys_.Count != 0) {
          base.AddRange(other.keys_, result.keys_);
        }
        if (other.iDs_.Count != 0) {
          base.AddRange(other.iDs_, result.iDs_);
        }
        if (other.counts_.Count != 0) {
          base.AddRange(other.counts_, result.counts_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              UserID = input.ReadInt32();
              break;
            }
            case 16: {
              AddKeys(input.ReadInt32());
              break;
            }
            case 24: {
              AddIDs(input.ReadInt32());
              break;
            }
            case 32: {
              AddCounts(input.ReadInt32());
              break;
            }
          }
        }
      }
      
      
      public bool HasUserID {
        get { return result.HasUserID; }
      }
      public int UserID {
        get { return result.UserID; }
        set { SetUserID(value); }
      }
      public Builder SetUserID(int value) {
        result.hasUserID = true;
        result.userID_ = value;
        return this;
      }
      public Builder ClearUserID() {
        result.hasUserID = false;
        result.userID_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> KeysList {
        get { return result.keys_; }
      }
      public int KeysCount {
        get { return result.KeysCount; }
      }
      public int GetKeys(int index) {
        return result.GetKeys(index);
      }
      public Builder SetKeys(int index, int value) {
        result.keys_[index] = value;
        return this;
      }
      public Builder AddKeys(int value) {
        result.keys_.Add(value);
        return this;
      }
      public Builder AddRangeKeys(scg::IEnumerable<int> values) {
        base.AddRange(values, result.keys_);
        return this;
      }
      public Builder ClearKeys() {
        result.keys_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> IDsList {
        get { return result.iDs_; }
      }
      public int IDsCount {
        get { return result.IDsCount; }
      }
      public int GetIDs(int index) {
        return result.GetIDs(index);
      }
      public Builder SetIDs(int index, int value) {
        result.iDs_[index] = value;
        return this;
      }
      public Builder AddIDs(int value) {
        result.iDs_.Add(value);
        return this;
      }
      public Builder AddRangeIDs(scg::IEnumerable<int> values) {
        base.AddRange(values, result.iDs_);
        return this;
      }
      public Builder ClearIDs() {
        result.iDs_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> CountsList {
        get { return result.counts_; }
      }
      public int CountsCount {
        get { return result.CountsCount; }
      }
      public int GetCounts(int index) {
        return result.GetCounts(index);
      }
      public Builder SetCounts(int index, int value) {
        result.counts_[index] = value;
        return this;
      }
      public Builder AddCounts(int value) {
        result.counts_.Add(value);
        return this;
      }
      public Builder AddRangeCounts(scg::IEnumerable<int> values) {
        base.AddRange(values, result.counts_);
        return this;
      }
      public Builder ClearCounts() {
        result.counts_.Clear();
        return this;
      }
    }
    static SSingleUpdate() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class CTest : pb::GeneratedMessage<CTest, CTest.Builder> {
    private static readonly CTest defaultInstance = new Builder().BuildPartial();
    public static CTest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CTest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CTest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CTest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CTest, CTest.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CTest__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasMsg) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteInt32(1, Id);
      }
      if (HasMsg) {
        output.WriteString(2, Msg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (HasMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CTest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CTest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CTest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CTest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CTest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CTest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CTest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CTest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CTest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CTest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CTest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CTest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CTest result = new CTest();
      
      protected override CTest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CTest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.CTest.Descriptor; }
      }
      
      public override CTest DefaultInstanceForType {
        get { return global::org.jiira.protobuf.CTest.DefaultInstance; }
      }
      
      public override CTest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CTest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CTest) {
          return MergeFrom((CTest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CTest other) {
        if (other == global::org.jiira.protobuf.CTest.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              Msg = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasMsg {
        get { return result.HasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
    }
    static CTest() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class STest : pb::GeneratedMessage<STest, STest.Builder> {
    private static readonly STest defaultInstance = new Builder().BuildPartial();
    public static STest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override STest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override STest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_STest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<STest, STest.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_STest__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasMsg) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteInt32(1, Id);
      }
      if (HasMsg) {
        output.WriteString(2, Msg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (HasMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static STest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static STest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static STest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static STest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static STest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static STest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static STest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static STest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static STest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static STest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(STest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<STest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      STest result = new STest();
      
      protected override STest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new STest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.STest.Descriptor; }
      }
      
      public override STest DefaultInstanceForType {
        get { return global::org.jiira.protobuf.STest.DefaultInstance; }
      }
      
      public override STest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        STest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is STest) {
          return MergeFrom((STest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(STest other) {
        if (other == global::org.jiira.protobuf.STest.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              Msg = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasMsg {
        get { return result.HasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
    }
    static STest() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  public sealed partial class CHeart : pb::GeneratedMessage<CHeart, CHeart.Builder> {
    private static readonly CHeart defaultInstance = new Builder().BuildPartial();
    public static CHeart DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CHeart DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CHeart ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CHeart__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CHeart, CHeart.Builder> InternalFieldAccessors {
      get { return global::org.jiira.protobuf.Protobuf.internal__static_org_jiira_protobuf_CHeart__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private long time_ = 0L;
    public bool HasTime {
      get { return hasTime; }
    }
    public long Time {
      get { return time_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasTime) {
        output.WriteInt64(1, Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, Time);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CHeart ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CHeart ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CHeart ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CHeart ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CHeart ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CHeart ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CHeart ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CHeart ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CHeart ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CHeart ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CHeart prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CHeart, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CHeart result = new CHeart();
      
      protected override CHeart MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CHeart();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::org.jiira.protobuf.CHeart.Descriptor; }
      }
      
      public override CHeart DefaultInstanceForType {
        get { return global::org.jiira.protobuf.CHeart.DefaultInstance; }
      }
      
      public override CHeart BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CHeart returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CHeart) {
          return MergeFrom((CHeart) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CHeart other) {
        if (other == global::org.jiira.protobuf.CHeart.DefaultInstance) return this;
        if (other.HasTime) {
          Time = other.Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Time = input.ReadInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasTime {
        get { return result.HasTime; }
      }
      public long Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
    }
    static CHeart() {
      object.ReferenceEquals(global::org.jiira.protobuf.Protobuf.Descriptor, null);
    }
  }
  
  #endregion
  
}
